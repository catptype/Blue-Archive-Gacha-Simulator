@import 'variables.css';

/* COMMON SETTING */
.card-rarity,
.card-school,
.card-label {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    margin: 0;
    padding: 0.2rem;
    background-color: rgba(250,250,250, 0.8);
    border-radius: var(--card-br);
}

/* ANIMATION SETTING */
.card-rarity,
.card-school,
.card-label,
.star,
.student-card > img {
    transition: transform var(--trans-dur) ease;
}

.student-card {
    transition: visibility 1s ease, opacity 1s ease;
}

.school-icon {
    transition: background-color var(--trans-dur) ease;
}


#student-container {
    overflow-y: auto;

    & .school-filter {
        display: flex;
        flex-wrap: wrap;
        gap: var(--gap-size);

        & .school-icon {
            display: flex;
            align-items: center;
            width: fit-content;
            height: 40px;
            cursor: pointer;

            &.activated {
                background-color: var(--color-primary);
            }

            > img {
                height: 24px;
                object-fit: scale-down;
            }

            > p {
                padding-left: var(--gap-size);
            }
        }
    }

    & .student-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));
        gap: var(--gap-size);
    
        & .student-card {
            position: relative;
            overflow: hidden;
            width: 130px;
            height: 150px;
            border-radius: var(--card-br);
            box-shadow: var(--color-shadow);
            opacity: 1;
        
            > img {
                position: absolute;
                top: 10%;
                width: 100%;
                height: 100%;
                object-fit: cover;
                transform: skew(calc(var(--parallelogram-deg) * -1)) scale(1.3);
            }
    
            &.hidden {
                /* I cannot use display property for animation */
                visibility: hidden; 
                position: absolute;
                /* Move away from screen */
                top: -100vh;
                left: -100vw;
                opacity: 0;
            }
    
            & .card-rarity {
                top: 5%;
                left: 5%;
                width: 15px;
                height: fit-content;
                overflow: hidden;
                transform: skew(calc(var(--parallelogram-deg) * -1)) translateX(-150%);
                transition-delay: -50ms;
                
                & .star {
                    width: 15px;
                    height: 15px;
                    background-image: url('../image/star_rarity.png');
                    background-size: 100% 100%;
                    transform: translateX(-300%) rotateZ(-360deg);
    
                    &:nth-child(1) {
                        transition-delay: 0ms;
                    }
    
                    &:nth-child(2) {
                        transition-delay: 100ms;
                    }
    
                    &:nth-child(3) {
                        transition-delay: 200ms;
                    }
                }
            }
    
            & .card-school {
                top: 5%;
                right: 5%;
                width: fit-content;
                height: fit-content;
                transform: skew(calc(var(--parallelogram-deg) * -1)) translateX(150%) rotateZ(360deg);
    
                > img {
                    width: auto;
                    height: 15px;
                    object-fit: cover;
                }
            }
    
            & .card-label {
                bottom: 0%;
                width: 100%;
                border-top-left-radius: 0;
                border-top-right-radius: 0;
                transform: translateY(100%);
    
                > p {
                    font-size: 10px;
                }
            }
    
            &:hover .card-rarity {
                width: fit-content;
            }
            
            &:hover .card-rarity,
            &:hover .card-school {
                transform: skew(calc(var(--parallelogram-deg) * -1)) translateX(0%) rotateZ(0deg);
            }
    
            &:hover > img {
                transform: skew(calc(var(--parallelogram-deg) * -1)) scale(1.2);
            }
    
            &:hover .star {
                transform: translateX(0%) rotateZ(0deg);
            }
            
            &:hover .card-label {
                transform: translateY(0%);
            }
            
        }
    }
}

